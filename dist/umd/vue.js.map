{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util/index.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 重写数组的方法 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\nlet oldArrayMethods = Array.prototype\r\n// value.__proto__ = arrayMethods // 劫持的方法会去arrayMethods找（原型链查找机制，向上查找，先找重写的，重写的没有继续向上查找）\r\n// arrayMethods.__proto__ = oldArrayMethods // slice 会去oldArrayMethods找\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\n\r\nconst methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n        console.log('用户调用了push方法') // AOP 切片编程\r\n        const result = oldArrayMethods[method].apply(this, args) // 调用原生的数组方法\r\n        // push unshift 添加的元素可能还是一个对象\r\n        let inserted // 当前用户插入的元素\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': // 3个 新增的属性 splice 有删除 新增的功能 arr.splice(0, 1, {name: 1})\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) ob.observerArray(inserted) // 将新增属性继续观测\r\n        return result\r\n    }\r\n})","/**\r\n * \r\n * @param {*} data 当前数据是不是对象\r\n */\r\nexport function isObject(data) {\r\n    return typeof data === 'object' && data !== null\r\n}\r\n\r\nexport function def(data, key, value) {\r\n    Object.defineProperty(data, key, {\r\n        enumerable: false,\r\n        configurable: false,\r\n        value\r\n    })\r\n}","import {\r\n    arrayMethods\r\n\r\n} from './array.js'\r\nimport {\r\n    isObject,\r\n    def\r\n} from '../util/index'\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        // vue 如果数据的层次过多 需要递归的解析对象中的属性，依次增加set和get方法\r\n        // value.__ob__ = this // 我给每一个监控过的对象都增加一个__ob__属性，由于__ob__也是对象所以会递归观测，导致observerArray重复调用，造成死循环\r\n        def(value, '__ob__', this)\r\n\r\n        if (Array.isArray(value)) {\r\n            // 如果数组的话并不会对索引进行观测 因为会导致性能问题\r\n            // 前端开发很少会操作索引 一般会使用 push shift unshift...\r\n\r\n            // 重写数组方法\r\n            value.__proto__ = arrayMethods\r\n            // 如果数组里放的是对象再进行监控\r\n            this.observerArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n    }\r\n    observerArray(value) {\r\n        value.forEach(item => {\r\n            observe(item)\r\n        })\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data)\r\n        keys.forEach(key => {\r\n            defineReactive(data, key, data[key]) // 定义响应式数据\r\n        })\r\n    }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n    observe(value) // 递归实现深度监测（数据越深，递归越多，从而导致性能浪费，所以写代码时，层级不要太多）\r\n    Object.defineProperty(data, key, {\r\n        get() { // 获取值时做一些操作\r\n            return value\r\n        },\r\n        set(newValue) { // 设置值时也可以做一些操作\r\n            console.log('更新')\r\n            if (newValue === value) return\r\n            observe(newValue) // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\r\n            value = newValue\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport function observe(data) {\r\n    let isObj = isObject(data)\r\n    if (!isObj) return\r\n\r\n    return new Observer(data) // 用来观测数据\r\n\r\n}","import {observe} from './observer/index'\r\nexport function initState(vm) {\r\n    const opts = vm.$options\r\n    // vue的数据来源 属性 方法 数据 计算属性 watch\r\n    if (opts.props) {\r\n        initProps(vm)\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm)\r\n    }\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\n\r\nfunction initProps() {\r\n\r\n}\r\n\r\nfunction initMethod() {\r\n\r\n}\r\n\r\nfunction initData(vm) {\r\n    // 数据初始化工作\r\n    let data = vm.$options.data // 用户传递的data\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n    // 对象劫持 用户改变了数据 通知 => 刷新页面\r\n    // MVVM模式 数据变化可以驱动视图变化\r\n\r\n    // Object.defineProperty() 给属性增加get方法和set方法\r\n    // Object.defineProperty 不能兼容ie8及以下 vue2无法兼容ie8版本\r\n    observe(data) // 响应式处理\r\n}\r\n\r\nfunction initComputed() {\r\n\r\n}\r\n\r\nfunction initWatch() {\r\n\r\n}","// ?: 匹配不捕获\r\n// arguments[0] = 匹配到的标签 arguments[1] 匹配到的标签名字\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // <aaa:bbb>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的 <div> <div />\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nlet root = null // ast语法树的树根\r\nlet currentParent // 标识当前父亲是谁\r\nlet stack = []\r\n// <div><p><span></span></p></div>\r\n// [div] => [div, p] => [div, p, span] => [div, p] => [div] => [] => 空 开始标签与结束标签匹配\r\nconst ELEMENT_TYPE = 1\r\nconst TEXT_TYPE = 3\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tag: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs,\r\n        parent: null\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction start (tagName, attrs) {\r\n    // 遇到开始标签 就创建一个ast元素\r\n    let element = createASTElement(tagName, attrs)\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    currentParent = element // 把当前元素标记成父ast树\r\n    stack.push(element) // 将开始元素存放到栈中\r\n}\r\n// <div><p></p></div> [div, p] => [div] p\r\nfunction end(tagName) {\r\n    // 复杂节点这里没有处理，例如注释、doctype节点，只处理核心逻辑\r\n    let element = stack.pop() // 拿到的是ast对象\r\n    // 标识当前p的父亲是div\r\n    currentParent = stack[stack.length - 1]\r\n    if (currentParent) {\r\n        element.parent = currentParent\r\n        currentParent.children.push(element) // 实现一个树的父子关系\r\n    }\r\n\r\n}\r\nfunction chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    if (text) {\r\n        currentParent.children.push({\r\n            text,\r\n            type: TEXT_TYPE\r\n        })\r\n    }\r\n}\r\nexport function parseHTML(html) {\r\n    // 不停地解析html字符串(截取)\r\n    while (html) {\r\n        let textEnd = html.indexOf('<')\r\n        if (textEnd == 0) {\r\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\r\n            let startTagMatch = parseStartTag() // 获取tagName,attrs\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs) // 1 解析开始标签\r\n                continue // 如果开始标签匹配完毕后 继续下一次匹配\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1]) // 2 解析结束标签\r\n                continue\r\n            }\r\n        }\r\n        let text\r\n        if (textEnd >=0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text){\r\n            advance(text.length)\r\n            chars(text) // 3 解析文本\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length) // 删除标签\r\n            let end,attr\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 解析属性\r\n                advance(attr[0].length) // 删除属性\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if (end) { // 去掉开始标签的 >\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    return root\r\n}","// ast语法树 是用对象来描述原生语法的\r\n// 虚拟dom 是用对象来描述dom节点的\r\nimport {parseHTML} from './parser-html'\r\n\r\nexport function compileToFunction(template) {\r\n    // 1) 解析html字符串 将html字符串 => ast 语法树\r\n    let root = parseHTML(template)\r\n    console.log('root', root)\r\n    return function render() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import {initState} from './state'\r\n\r\nimport {compileToFunction} from './compiler/index.js'\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // 数据劫持\r\n        const vm = this // vue中使用 this.$options 指代的就是用户传递的属性\r\n        vm.$options = options\r\n\r\n        // 初始化状态\r\n        initState(vm) // 分割代码\r\n\r\n        // 如果用户传入了el属性 需要将页面渲染出来\r\n        // 如果用户传入了el 就要实现挂载流程\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        const options = vm.$options\r\n        el = document.querySelector(el)\r\n\r\n        // 默认会先查找有没有render方法，没有render会采用tempalte，template也没有就用el中的内容\r\n\r\n        if (!options.render) {\r\n            // 对模板进行编译\r\n            let template = options.template // 取出模板\r\n            if (!template && el) {\r\n                template = el.outerHTML // 兼容性问题，可以创建一个div，取innerHTML\r\n            }\r\n            const render = compileToFunction(template)\r\n            options.render = render\r\n            // 我们需要将template 转化成 render方法\r\n        }\r\n    }\r\n}","import {initMixin} from './init'\r\n// Vue的核心代码 只是Vue的一个声明\r\nfunction Vue(options) {\r\n    // 进行Vue的初始化操作\r\n    this._init(options)\r\n}\r\n// 通过引入文件的方式 给Vue原型上添加方法\r\ninitMixin(Vue) // 给Vue原型上添加一个_init方法\r\n\r\nexport default Vue"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","isObject","data","def","key","value","defineProperty","enumerable","configurable","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","end","pop","length","chars","text","replace","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","compileToFunction","template","render","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":"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"}